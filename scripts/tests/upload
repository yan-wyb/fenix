#!/bin/bash

## hyphop ##

#= UPLOAD files

[ "$VERBOSE_" ] && \
echo "%%${0##*/} $@">&2

DIE(){
    echo "[e] $@">&2
    exit 1
}


[ "$VERBOSE_" ] && \
echo "UPLOAD: $UPLOAD
BUILD_IMAGES: $BUILD_IMAGES
RELEASE_BUILD: $RELEASE_BUILD
IMAGE_FILE_NAME: $IMAGE_FILE_NAME">&2

[ "$UPLOAD" ] || DIE "UPLOAD undefined"
[ "$BUILD_IMAGES" ] || DIE "BUILD_IMAGES undefined"
[ "$IMAGE_FILE_NAME" ] || DIE I"MAGE_FILE_NAME undefined"
[ -d "$UPLOAD" ] || DIE "UPLOAD $UPLOAD not exist"

UPLOAD_=${UPLOAD#$HIDE_PREF}

[ "$SUDO_UID" ] && \
SUDO_="sudo -u $SUDO_USER"

for f in "$BUILD_IMAGES/"$IMAGE_FILE_NAME*; do

    UPLOAD_REL=/storage/.tmp

    if [ -e "$f" ]; then
	f_=${f#$BUILD_IMAGES/}
	BDT=
	B=
	D=
	T=
	RAW=
	    case $IMAGE_FILE_NAME in
		VIM1*) B=VIM1 ;;
		VIM2*) B=VIM2 ;;
		VIM3L*)B=VIM3L;;
		VIM3*) B=VIM3 ;;
		Edge*) B=Edge ;;
	    esac
	    case $IMAGE_FILE_NAME in
		*Ubuntu*) D=Ubuntu ;;
		*Debian*) D=Debian ;; # maybe ;-)
	    esac
	    case $IMAGE_FILE_NAME in
		*SD-USB*) T=SD-USB ;;
		*EMMC*)   T=EMMC ;;
	    esac
	    case $IMAGE_FILE_NAME in
		*SD-USB*) RAW=1 ;;
		*raw.img*) RAW=1 ;;
	    esac

	[ "$B" -a "$D" -a "$T" ] && \
		BDT=$B/$D/$T

	[ "$BUILD_TYPE" = "release" ] && {

	    [ "$BDT" ] && \
	    UPLOAD_REL=/storage/Firmware/$BDT

	    echo "%%UPLOAD-REL: $f_ => $UPLOAD_REL"

	    [ -d "$UPLOAD_REL" ] || \
	    $SUDO_ mkdir -p "$UPLOAD_REL"
	    $SUDO_ cp "$f" "$UPLOAD_REL"
	    echo "%%UPLOAD_FILE: $UPLOAD_REL/$f_"

	    [ "$BDT" -a "$RAW" ] && {
		TO="/storage/Firmware/Krescue/images/$f_"
		$SUDO_ ln -sf "../../$BDT/$f_" "$TO"
		echo "%%UPLOAD_LINK_KRESCUE: $TO"
	    }
	} # release upload END

	echo "%%UPLOAD: $f_ => $UPLOAD_"
	$SUDO_ mv "$f" "$UPLOAD"
	[ "$BDT" ] && {
	    TO="$UPLOAD_/$BDT/$f_"
	    $SUDO_ mkdir -p "$UPLOAD_/$BDT"
	    $SUDO_ ln -sf "../../../$f_" "$TO"
	    echo "%%UPLOAD_LINK: $TO"
	}

	echo "%%UPLOAD_FILE: $UPLOAD_/$f_"

    else
	echo "%%UPLOAD: $f not exist">&2
    fi
done
